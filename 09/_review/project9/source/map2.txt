 #######################################################                       |
 #-------###---------------###---------------###-------#                       |
 #-#####-###-#############-###-#############-###-#####-#                       |
 #-#####-###-#############-###-#############-###-#####-#                       |
 #-------------------###---###---###-------------------#                       |
 ###-###-#######-###-###-#######-###-###-#######-###-###                       |
   #-###-#######-###-###-#######-###-###-#######-###-#                         |
 ###-###-#######-###-###---------###-###-#######-###-###                       |
 =..-###---------###-----#######-----###---------###-..=                       |
 ###-#######-###########-#######-###########-#######-###                       |
   #-#######-###########-#######-###########-#######-#                         |
   #------------------......1......------------------#                         |
   #-#######-###-#####.####~~~####.#####-###-#######-#                         |
   #-#######-###-#####.####~~~####.#####-###-#######-#                         |
   #-###-----###---###.##:3:2:4:##.###---###-----###-#                         |
   #-###-###-#####-###.###########.###-#####-###-###-#                         |
 ###-###-###-#####-###.###########.###-#####-###-###-###                       |
 =..-----###----------.............----------###-----..=                       |
 ###-###########-#####-###########-#####-###########-###                       |
   #-###########-#####-###########-#####-###########-#                         |
   #-------------###-------###-------###-------------#                         |
   #-#######-#######-#####-###-#####-#######-#######-#                         |
 ###-#######-#######-#####-###-#####-#######-#######-###                       |
 #-------------------###---.0.---###-------------------#                       |
 #-#####-#######-###-###-#######-###-###-#######-#####-#                       |
 #-#####-#######-###-###-#######-###-###-#######-#####-#                       |
 #-#####-###-----###-----#######-----###-----###-#####-#                       |
 #-#####-###-###########-#######-###########-###-#####-#                       |
 #-#####-###-###########-#######-###########-###-#####-#                       |
 #-----------------------------------------------------#                       |
 #######################################################                       |
                                                                                |
                                                                                |
                                                                                |
                                                                                |
                                                                                |
                                                                                |
=== key ===
space : outside board
# : wall
- : part of the maze-path with a dot
. : part of the maze-path without a dot
~ : the partial wall between the ghost box and the maze-path
= : horizontal jump point (vertical jump not implemented)
0 : pacman start point
1-4 : ghost start points (1 should be on maze-path, 2-4 should be in the box)

file must be filled with spaces to at least 66 wide and 34 tall (or some set of
    numbers smaller than these - I can't be bothered to calculate the precise
    number needed), bigger is fine - anything outside the expected box will be ignored
    (the |'s on the right are to keep my text editor from cleaning up the trailing spaces)

vertical paths must all fall on even column numbers or things prolly won't line
    up right. Or maybe odd columns, I'm not sure.

vvvv last line should be all spaces too, so python can wrap the lists
                                                                                |
